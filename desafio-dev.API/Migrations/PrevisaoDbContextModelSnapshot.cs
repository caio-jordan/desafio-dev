// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using desafio_dev.API.Infrastructure.Context;

#nullable disable

namespace desafio_dev.API.Migrations
{
    [DbContext(typeof(PrevisaoDbContext))]
    partial class PrevisaoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("desafio_dev.API.Domain.Current", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IsDay")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "is_day");

                    b.Property<string>("LastUpdated")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "last_updated");

                    b.Property<decimal>("LastUpdatedEpoch")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "last_updated_epoch");

                    b.Property<float>("PressureMb")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "pressure_mb");

                    b.Property<float>("TempC")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "temp_c");

                    b.Property<float>("TempF")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "temp_f");

                    b.Property<int>("WindDegree")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "wind_degree");

                    b.Property<float>("WindKph")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "wind_kph");

                    b.Property<float>("WindMph")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "wind_mph");

                    b.HasKey("Id");

                    b.ToTable("Current");
                });

            modelBuilder.Entity("desafio_dev.API.Domain.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Lat")
                        .HasColumnType("real");

                    b.Property<string>("Localtime")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "localtime");

                    b.Property<float>("LocaltimeEpoch")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "localtime_epoch");

                    b.Property<float>("Lon")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TzId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "tz_id");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("desafio_dev.API.Domain.Weather", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdCurrent")
                        .HasColumnType("integer");

                    b.Property<int>("IdLocation")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdCurrent");

                    b.HasIndex("IdLocation");

                    b.ToTable("Weather");
                });

            modelBuilder.Entity("desafio_dev.API.Domain.Weather", b =>
                {
                    b.HasOne("desafio_dev.API.Domain.Current", "Current")
                        .WithMany("Weather")
                        .HasForeignKey("IdCurrent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("desafio_dev.API.Domain.Location", "Location")
                        .WithMany("Weather")
                        .HasForeignKey("IdLocation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Current");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("desafio_dev.API.Domain.Current", b =>
                {
                    b.Navigation("Weather");
                });

            modelBuilder.Entity("desafio_dev.API.Domain.Location", b =>
                {
                    b.Navigation("Weather");
                });
#pragma warning restore 612, 618
        }
    }
}
